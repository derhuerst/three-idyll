// Generated by CoffeeScript 1.9.3
var layer, terrain;

terrain = function(seed) {
  var instance;
  instance = Object.create(terrain.Terrain);
  instance.noise = new SimplexNoise(seed || Math.random);
  instance.layers = [];
  return instance;
};

terrain.Terrain = {
  z: function(x, y) {
    var i, layer, len, ref, z;
    z = 0;
    ref = this.layers;
    for (i = 0, len = ref.length; i < len; i++) {
      layer = ref[i];
      z = layer.z(this.noise, x, y, z);
    }
    return z;
  }
};

layer = function(from) {
  return Object.create(from);
};

layer.Layer = {
  stretch: 1,
  amplify: 1,
  z: function(noise, x, y, z) {
    z += noise.noise2D(x / this.stretch, y / this.stretch) * this.amplify;
    return z;
  }
};

layer.Base = Object.create(layer.Layer);

layer.Base.stretch = 100;

layer.Base.amplify = 20;

layer.Minimum = Object.create(layer.Layer);

layer.Minimum.minimum = 10;

layer.Minimum.z = function(noise, x, y, z) {
  if (z < this.minimum) {
    return this.minimum;
  } else {
    return z;
  }
};

layer.Maximum = Object.create(layer.Layer);

layer.Maximum.maximum = 30;

layer.Maximum.z = function(noise, x, y, z) {
  if (z > this.maximum) {
    return this.maximum;
  } else {
    return z;
  }
};

layer.Relief = Object.create(layer.Layer);

layer.Relief.stretch = 2;

layer.Relief.amplify = .1;

layer.Relief.z = function(noise, x, y, z) {
  z += noise.noise2D(x * this.stretch, y * this.stretch) * this.amplify * z / 30;
  return z;
};
